// ==================== üîπ DOM References ====================
const dynamicText = document.getElementById("dynamicText");
const ayahText = document.getElementById("ayahText");
const ayahRef = document.getElementById("ayahRef");
const searchInput = document.getElementById("searchInput");
const cardContainer = document.getElementById("cardContainer");
const menuIcon = document.querySelector('.menu-icon');
const menu = document.getElementById('mainMenu');
const closeBtn = document.getElementById('closeMenuBtn');
const noResultsCard = document.getElementById("noResultsCard");

// ==================== üîπ Data Constants ====================
const dhikr = [
  "Allahu Akbar",
  "Subhanallah",
  "Alhamdulillah",
  "La ilaha illallah",
  "Astaghfirullah"
];

const ayahs = [
  { text: "‡¶¨‡¶≤,‡¶§‡¶ø‡¶®‡¶ø‡¶á ‡¶Ü‡¶≤‡ßç‡¶≤‡¶æ‡¶π,‡¶è‡¶ï ‡¶ì ‡¶Ö‡¶¶‡ßç‡¶¨‡¶ø‡¶§‡ßÄ‡¶Ø‡¶º‡•§", ref: "Qur'an ‡ßß‡ßß‡ß®:‡ßß" },
  { text: "‡¶®‡¶ø‡¶∂‡ßç‡¶ö‡ßü‡¶á ‡¶ï‡¶∑‡ßç‡¶ü‡ßá‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶∞‡ßü‡ßá‡¶õ‡ßá ‡¶∏‡ßç‡¶¨‡¶∏‡ßç‡¶§‡¶ø‡•§", ref: "Qur'an ‡ßØ‡ß™:‡ß¨" },
  { text: "‡¶Æ‡¶ø‡¶•‡ßç‡¶Ø‡¶æ‡¶∞‡ßã‡¶™‡¶ï‡¶æ‡¶∞‡ßÄ‡¶¶‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶∏‡ßá‡¶¶‡¶ø‡¶®‡ßá‡¶∞ ‡¶¶‡ßÅ‡¶∞‡ßç‡¶≠‡ßã‡¶ó‡•§", ref: "Qur'an ‡ß≠‡ß≠:‡ßß‡ß´" },
  { text: "‡¶Ö‡¶§‡¶è‡¶¨ ‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶Æ‡¶π‡¶æ‡¶® ‡¶∞‡¶¨‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ‡ßá ‡¶§‡¶æ‡¶∏‡¶¨‡ßÄ‡¶π ‡¶™‡¶æ‡¶† ‡¶ï‡¶∞‡ßã‡•§", ref: "Qur'an ‡ß¨‡ßØ:‡ß´‡ß®" },
  { text: "‡¶Ü‡¶∞ ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶∞‡¶¨‡ßá‡¶∞ ‡¶™‡ßç‡¶∞‡¶§‡¶ø ‡¶Ü‡¶ï‡ßÉ‡¶∑‡ßç‡¶ü ‡¶π‡¶ì‡•§", ref: "Qur'an ‡ßØ‡ß™:‡ßÆ" },
  { text: "‡¶∏‡ßá ‡¶Æ‡¶®‡ßá ‡¶ï‡¶∞‡ßá ‡¶§‡¶æ‡¶∞ ‡¶∏‡¶Æ‡ßç‡¶™‡¶¶ ‡¶§‡¶æ‡¶ï‡ßá ‡¶ö‡¶ø‡¶∞‡¶ú‡ßÄ‡¶¨‡ßÄ ‡¶ï‡¶∞‡¶¨‡ßá‡•§", ref: "Qur'an ‡ßß‡ß¶‡ß™:‡ß©" }
];

const cards = [
  { title: "‡¶∏‡¶æ‡¶≤‡¶æ‡¶§‡ßá‡¶∞ ‡¶ó‡ßÅ‡¶∞‡ßÅ‡¶§‡ßç‡¶¨", details: "‡¶∏‡¶æ‡¶≤‡¶æ‡¶§ ‡¶¨‡¶æ ‡¶®‡¶æ‡¶Æ‡¶æ‡¶ú ...", link: "pages/salat.html" },
  { title: "‡¶∞‡¶Æ‡¶ú‡¶æ‡¶®‡ßá‡¶∞ ‡¶ó‡ßÅ‡¶∞‡ßÅ‡¶§‡ßç‡¶¨", details: "‡¶∞‡¶Æ‡¶ú‡¶æ‡¶® ‡¶Æ‡¶æ‡¶∏‡ßá‡¶∞ ‡¶ó‡ßÅ‡¶∞‡ßÅ‡¶§‡ßç‡¶¨ ...", link: "pages/siam.html" },
  { title: "‡¶π‡¶ú‡ßá‡¶∞ ‡¶ó‡ßÅ‡¶∞‡ßÅ‡¶§‡ßç‡¶¨", details: "‡¶π‡¶ú ‡¶á‡¶∏‡¶≤‡¶æ‡¶Æ‡ßá‡¶∞ ‡¶™‡¶û‡ßç‡¶ö‡¶∏‡ßç‡¶§‡¶Æ‡ßç‡¶≠ ...", link: "pages/hajj.html" }
];

// ==================== üîπ Dynamic Dhikr ====================
let dhikrIndex = 0;

function rotateDhikr() {
  if (!dynamicText) return;

  dynamicText.textContent = dhikr[dhikrIndex];
  dynamicText.style.animation = "none";
  void dynamicText.offsetWidth;
  dynamicText.style.animation = "fadeSlide 1s ease-in-out";

  dhikrIndex = (dhikrIndex + 1) % dhikr.length;
}

setInterval(rotateDhikr, 3000);

// ==================== üîπ Random Ayah ====================
function showRandomAyah() {
  if (!ayahText || !ayahRef) return;

  const ayah = ayahs[Math.floor(Math.random() * ayahs.length)];

  ayahText.style.opacity = "0";
  ayahText.style.transform = "translateY(20px)";
  void ayahText.offsetWidth;

  ayahText.textContent = ayah.text;
  ayahRef.textContent = ayah.ref;

  ayahText.style.animation = "ayahAnimate 1s ease-in-out forwards";
}

showRandomAyah();
setInterval(showRandomAyah, 6000);

// ==================== üîπ Generate Cards ====================
function generateCards() {
  if (!cardContainer) return;

  for (let i = 0; i < 3; i++) {
    const data = cards[i % cards.length];
    const div = document.createElement("div");
    div.className = "card fade-card";
    div.innerHTML = `
      <div class="card-title">${data.title}</div>
      <button class="read-btn" onclick="location.href='${data.link}'">Read</button>
    `;
    cardContainer.appendChild(div);
  }
}
generateCards();

// ==================== üîπ Intersection Observer ====================
const observer = new IntersectionObserver((entries) => {
  entries.forEach(entry => {
    if (entry.isIntersecting) {
      entry.target.classList.add("visible");
    }
  });
}, { threshold: 0.1 });

document.querySelectorAll(".fade-card").forEach(card => observer.observe(card));

// ==================== üîπ Card Search Filter ====================
if (searchInput) {
  searchInput.addEventListener("input", function () {
    const keyword = this.value.toLowerCase();
    const cardsEls = Array.from(document.querySelectorAll(".fade-card"));
    let matched = [];

    cardsEls.forEach(card => {
      const titleEl = card.querySelector(".card-title");
      titleEl.innerHTML = titleEl.textContent;
      card.classList.remove("highlight-card");

      if (keyword && titleEl.textContent.toLowerCase().includes(keyword)) {
        titleEl.innerHTML = titleEl.textContent.replace(
          new RegExp(`(${keyword})`, "gi"),
          `<span class="highlight">$1</span>`
        );
        card.classList.add("highlight-card");
        matched.push(card);
      }
    });

    matched.reverse().forEach(card => cardContainer.prepend(card));

    if (keyword && matched.length === 0 && noResultsCard) {
      noResultsCard.style.display = "block";
      noResultsCard.scrollIntoView({ behavior: "smooth", block: "center" });
    } else if (noResultsCard) {
      noResultsCard.style.display = "none";
    }

    if (matched.length > 0) {
      matched[0].scrollIntoView({ behavior: "smooth", block: "center" });
    }
  });
}

// ==================== üîπ Menu Toggle ====================
if (menuIcon && menu) {
  menuIcon.addEventListener('click', function () {
    menu.classList.toggle('show');
  });
}

if (closeBtn && menu) {
  closeBtn.addEventListener('click', function () {
    menu.classList.remove('show');
  });
}

// ==================== üîπ Swipe to Close Menu (Mobile) ====================
let touchStartX = 0;

if (menu) {
  menu.addEventListener('touchstart', function (e) {
    touchStartX = e.touches[0].clientX;
  });

  menu.addEventListener('touchend', function (e) {
    let touchEndX = e.changedTouches[0].clientX;
    let swipeDistance = touchEndX - touchStartX;

    if (swipeDistance > 50) {
      menu.classList.remove('show');
    }
  });
    }
